CREATE DATABASE consultorio;
USE consultorio;

CREATE TABLE paciente (
	id INT PRIMARY KEY AUTO_INCREMENT,
	nome VARCHAR(100) NOT NULL,
	cpf VARCHAR(14) NOT NULL UNIQUE,
	telefone VARCHAR(20) NOT NULL,
	telefone2 VARCHAR(20),
	email VARCHAR(100),
	rua VARCHAR(100),
	numero VARCHAR(10),
	bairro VARCHAR(50),
	cidade VARCHAR(50),
	data_nascimento DATE
);

CREATE TABLE dentista (
	id INT PRIMARY KEY AUTO_INCREMENT,
	nome VARCHAR(100) NOT NULL,
	cpf VARCHAR(14) NOT NULL UNIQUE,
	telefone VARCHAR(20) NOT NULL,
	telefone2 VARCHAR(20),
	email VARCHAR(100),
	rua VARCHAR(100),
	numero VARCHAR(10),
	bairro VARCHAR(50),
	cidade VARCHAR(50),
	data_nascimento DATE,
	cro VARCHAR(20),
	especialidade VARCHAR(100)
);

CREATE TABLE enderecos (
	id BIGINT PRIMARY KEY AUTO_INCREMENT,
	rua VARCHAR(255) NOT NULL,
	numero VARCHAR(20),
	bairro VARCHAR(100),
	cidade VARCHAR(100) NOT NULL,
	estado VARCHAR(50),
	cep VARCHAR(20)
);

CREATE TABLE auxiliar (
	id INT PRIMARY KEY AUTO_INCREMENT,
	nome VARCHAR(100) NOT NULL,
	cpf VARCHAR(14) NOT NULL UNIQUE,
	telefone VARCHAR(20) NOT NULL,
	telefone2 VARCHAR(20),
	email VARCHAR(100),
	rua VARCHAR(100),
	numero VARCHAR(10),
	bairro VARCHAR(50),
	cidade VARCHAR(50),
	data_nascimento DATE
);

CREATE TABLE procedimento (
    codigo VARCHAR(20) PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    pos_operatorio TEXT,
    valor DECIMAL(10,2) NOT NULL
);

CREATE TABLE consulta (
    id INT AUTO_INCREMENT PRIMARY KEY,
    data DATE NOT NULL,
    horario_inicio TIME NOT NULL,
    horario_termino TIME NOT NULL,
    status_pagamento VARCHAR(20) NOT NULL,
    metodo_pagamento VARCHAR(20) NOT NULL,
    id_paciente INT NOT NULL,
    id_dentista INT NOT NULL,
    FOREIGN KEY (id_paciente) REFERENCES paciente(id),
    FOREIGN KEY (id_dentista) REFERENCES dentista(id)
);

-- Criar tabela relacional para associar consultas a procedimentos
CREATE TABLE consulta_procedimento (
    consulta_id INT NOT NULL,
    procedimento_codigo VARCHAR(20) NOT NULL,
    PRIMARY KEY (consulta_id, procedimento_codigo),
    FOREIGN KEY (consulta_id) REFERENCES consulta(id) ON DELETE CASCADE,
    FOREIGN KEY (procedimento_codigo) REFERENCES procedimento(codigo) ON DELETE CASCADE
);
CREATE TABLE historico_pagamento (
    id INT AUTO_INCREMENT PRIMARY KEY,
    consulta_id INT NOT NULL,
    status_anterior VARCHAR(20) NOT NULL,
    status_novo VARCHAR(20) NOT NULL,
    data_alteracao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    metodo_pagamento_anterior VARCHAR(20),
    metodo_pagamento_novo VARCHAR(20),
    FOREIGN KEY (consulta_id) REFERENCES consulta(id) ON DELETE CASCADE
);
CREATE TRIGGER trg_historico_pagamento
AFTER UPDATE ON consulta
FOR EACH ROW
BEGIN
    IF OLD.status_pagamento <> NEW.status_pagamento
       OR OLD.metodo_pagamento <> NEW.metodo_pagamento THEN
        INSERT INTO historico_pagamento (
            consulta_id,
            status_anterior,
            status_novo,
            metodo_pagamento_anterior,
            metodo_pagamento_novo
        ) VALUES (
            OLD.id,
            OLD.status_pagamento,
            NEW.status_pagamento,
            OLD.metodo_pagamento,
            NEW.metodo_pagamento
        );
    END IF;
END;
